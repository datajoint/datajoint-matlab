# docker-compose -f local-docker-compose.yml --env-file LNX.env up --build
version: '2.4'
x-net: &net
  networks:
    - main
services:
  db:
    <<: *net
    image: datajoint/mysql:${MYSQL_TAG}
    environment:
      - MYSQL_ROOT_PASSWORD=simple
    # ports:
    #   - "3306:3306"
    ## To persist MySQL data
    # volumes:
    #   - ./mysql/data:/var/lib/mysql
  minio:
    <<: *net
    environment:
      - MINIO_ACCESS_KEY=datajoint
      - MINIO_SECRET_KEY=datajoint
    image: minio/minio:$MINIO_VER
    # ports:
    #   - "9000:9000"
    # To persist MinIO data and config
    # volumes:
    #   - ./minio/data:/data
    #   - ./minio/config:/root/.minio
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://minio:9000/minio/health/live"]
      timeout: 5s
      retries: 60
      interval: 1s
  fakeservices.datajoint.io:
    <<: *net
    image: raphaelguzman/nginx:v0.0.10
    environment:
    - ADD_db_TYPE=DATABASE
    - ADD_db_ENDPOINT=db:3306
    - ADD_minio_TYPE=MINIO
    - ADD_minio_ENDPOINT=minio:9000
    - ADD_minio_PORT=80 # allow unencrypted connections
    - ADD_minio_PREFIX=/datajoint
    - ADD_browser_TYPE=MINIOADMIN
    - ADD_browser_ENDPOINT=minio:9000
    - ADD_browser_PORT=80 # allow unencrypted connections
    ports:
      - "80:80"
      - "443:443"
      - "3306:3306"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
  app:
    <<: *net
    environment:
    - DJ_HOST=fakeservices.datajoint.io
    - DJ_USER=root
    - DJ_PASS=simple
    - DJ_TEST_HOST=fakeservices.datajoint.io
    - DJ_TEST_USER=datajoint
    - DJ_TEST_PASSWORD=datajoint
    - S3_ENDPOINT=fakeservices.datajoint.io
    - S3_ACCESS_KEY=datajoint
    - S3_SECRET_KEY=datajoint
    - S3_BUCKET=datajoint.test
    - MATLAB_USER
    - MATLAB_LICENSE
    - JUPYTER_PASSWORD=datajoint
    - DISPLAY
    image: raphaelguzman/matlab:${MATLAB_VERSION}-GUI
    depends_on:
      fakeservices.datajoint.io:
        condition: service_healthy
    ports:
      - "8888:8888"
    user: ${MATLAB_UID}:${MATLAB_GID}
    working_dir: /home/muser/notebooks
    command: > 
      /bin/bash -c "
        ## Remove mym
        rm -R /src/mym;
        ## Set dj path
        matlab -nodisplay -r \"\
            addpath('/src');\
            addpath('/src/tests');\
            savepath;\
          \";
        ## Interactive Jupyter Notebook environment
        jupyter notebook;
      "
    mac_address: $MATLAB_HOSTID
    volumes:
      ## Dev mounts
      - .:/src
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      ## Additional mounts may go here
      # - ./notebook:/home/muser/notebooks
networks:
  main: